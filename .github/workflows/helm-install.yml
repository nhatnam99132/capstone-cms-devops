name: Helm Install

on:
  workflow_call:

jobs:
  helm-install:
    runs-on: ubuntu-latest
    environment: dev

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      # Set up Helm
      - name: Setup Helm
        run: |
          curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash
          helm version

      # Authenticate with GCP
      - name: Authenticate to GCP for Helm
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}

      # Get GKE credentials (this replaces the manual SDK and plugin installation)
      - name: Get GKE credentials
        id: 'get-credentials'
        uses: google-github-actions/get-gke-credentials@v2
        with:
          cluster_name: devops-gke-cluster
          location: asia-southeast1-a
          project_id: woven-honor-443710-f5

      # Add Helm repositories
      - name: Add Helm Repositories
        run: |
          helm repo add ingress-nginx https://kubernetes.github.io/ingress-nginx
          helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
          helm repo update

      # Install Ingress Nginx if not already installed
      - name: Install Ingress Nginx
        run: |
          if ! helm status ingress-nginx &>/dev/null; then
            helm install ingress-nginx ingress-nginx/ingress-nginx --namespace ingress --create-namespace --set controller.service.type=LoadBalancer --set controller.service.externalTrafficPolicy=Local
          else
            echo "Ingress Nginx is already installed, skipping..."
          fi

      # Get the external IP of the service
      - name: Get External IP of the Service
        id: 'get-external-ip'
        run: |
          EXTERNAL_IP=$(kubectl get service ingress-nginx-controller --namespace ingress --output jsonpath='{.status.loadBalancer.ingress[0].ip}')
          echo "EXTERNAL_IP=$EXTERNAL_IP" >> $GITHUB_ENV

      # Replace any IP address in *.nip.io format with the actual EXTERNAL_IP in values.yaml
      - name: Replace IP in values.yaml
        run: |
          sed -i "s/\([0-9]*\.[0-9]*\.[0-9]*\.[0-9]*\)\.nip\.io/$EXTERNAL_IP.nip.io/g" ./my-chart/values.yaml

      # Replace nip.io in grafana.yml with the actual EXTERNAL_IP
      - name: Replace nip.io in grafana.yml
        run: |
          sed -i "s/\([0-9]*\.[0-9]*\.[0-9]*\.[0-9]*\)\.nip\.io/$EXTERNAL_IP.nip.io/g" grafana.yml


      # Install Grafana (Prometheus stack) if not already installed
      - name: Install Grafana
        run: |
          if ! helm status grafana &>/dev/null; then
            helm install grafana prometheus-community/kube-prometheus-stack --namespace monitoring --create-namespace --set forceCreateNamespace=true -f grafana.yml
          else
            echo "Grafana is already installed, skipping..."
          fi

      # Install my-chart if not already installed
      - name: Install My Chart
        run: |
          if ! helm status my-chart &>/dev/null; then
            helm install my-chart my-chart/ --namespace my-app --create-namespace
          else
            echo "My Chart is already installed, skipping..."
          fi

      # Verify the service in my-app namespace
      - name: Verify Service
        run: |
          kubectl get svc -n my-app
